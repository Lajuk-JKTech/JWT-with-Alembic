"""create vm_user table

Revision ID: 9ef52b221073
Revises: 
Create Date: 2024-10-22 04:54:27.824852

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9ef52b221073'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vm_users',
    sa.Column('eventid', sa.String(), nullable=True),
    sa.Column('aggregateid', sa.UUID(), nullable=False),
    sa.Column('aggregatetype', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('accepted_tc_version', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('Invitation Pending', 'Active', 'Inactive', 'Not Invited', name='user_status_enum'), nullable=True),
    sa.Column('invite_accepted', sa.Boolean(), nullable=True),
    sa.Column('assignee_type', sa.Enum('USER', 'AIA', 'TOKEN', name='user_assignee_type_enum'), nullable=True),
    sa.Column('active_platform_user', sa.Boolean(), nullable=False),
    sa.Column('profile', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('aggregateid')
    )
    op.create_index('user_vm_email_udx', 'vm_users', [sa.text('lower(email)')], unique=True)
    op.create_index('vm_user_aggregate_idx', 'vm_users', ['aggregateid'], unique=False)
    op.create_index('vm_user_name_idx', 'vm_users', [sa.text('lower(first_name)'), sa.text('lower(last_name)')], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('vm_user_name_idx', table_name='vm_users')
    op.drop_index('vm_user_aggregate_idx', table_name='vm_users')
    op.drop_index('user_vm_email_udx', table_name='vm_users')
    op.drop_table('vm_users')
    # ### end Alembic commands ###
